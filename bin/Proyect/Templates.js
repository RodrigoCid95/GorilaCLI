"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.package3 = exports.main3 = exports.socketsControllers3 = exports.httpControllers3 = exports.socketsController3 = exports.httpController3 = exports.configIndex3 = exports.publicIndex1 = exports.package2 = exports.main2 = exports.socketsControllers = exports.socketsController = exports.configIndex2 = exports.socketsProfiles = exports.package1 = exports.main1 = exports.model = exports.httpControllers = exports.httpController = exports.configIndex1 = exports.httpProfiles = exports.publicIndex = exports.icon = exports.tsconfig = exports.package0 = exports.main0 = exports.libIndex = exports.libSample = exports.configIndex0 = exports.launch = void 0;
var fs = require("fs");
var path = require("path");
exports.launch = "{\n  // Use IntelliSense para saber los atributos posibles.\n  // Mantenga el puntero para ver las descripciones de los existentes atributos.\n  // Para m\u00E1s informaci\u00F3n, visite: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"name\": \"Iniciar el programa\",\n      \"skipFiles\": [\n        \"<node_internals>/**\"\n      ],\n      \"program\": \"" + "${workspaceFolder}" + "\\\\dist\\\\main.js\",\n      \"outFiles\": [\n        \"" + "${workspaceFolder}" + "/dist/**/*.js\"\n      ]\n    }\n  ]\n}";
exports.configIndex0 = "import { LoaderConfig } from '@gorila/core';\n\nexport default new LoaderConfig({\n  // Agrega aqu\u00ED tus perfiles de configuraci\u00F3n.\n});\n";
exports.libSample = "import { Library } from '@gorila/core';\n\nexport class LibSample extends Library {\n  private message = 'Hola, Gorila!';\n  public getMessage() {\n    return this.message;\n  }\n  public build() {\n    return this.getMessage.bind(this);\n  }\n}\n";
exports.libIndex = "import { Libraries } from '@gorila/core';\nimport { LibSample } from './libSample';\n\nconst libs: Libraries = [\n  LibSample\n];\n\nexport default libs;\n";
exports.main0 = "import { LibraryManager, Log } from '@gorila/core';\nimport loaderConfig from './config/index';\nimport libs from './libraries';\n\n(async () => {\n  const libraryManager = new LibraryManager(loaderConfig, libs);\n  await libraryManager.build();\n  Log('Listo!');\n})();\n";
exports.package0 = "{\n  \"name\": \"gorilaproyect\",\n  \"version\": \"0.0.1\",\n  \"main\": \"dist/main.js\",\n  \"scripts\": {\n    \"start\": \"tsc -w\"\n  },\n  \"dependencies\": {\n    \"@gorila/core\": \"git+https://github.com/RodrigoCid95/GorilaCore.git\",\n    \"tslib\": \"^2.0.3\"\n  }\n}\n";
exports.tsconfig = "{\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist\",\n    \"sourceMap\": true,\n    \"module\": \"CommonJS\",\n    \"moduleResolution\": \"node\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"target\": \"ES5\",\n    \"allowSyntheticDefaultImports\": true,\n    \"removeComments\": true,\n    \"allowJs\": true,\n    \"importHelpers\": true,\n    \"lib\": [\n      \"ES2015\"\n    ]\n  },\n  \"include\": [\n    \"src\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\"\n  ]\n}\n";
exports.icon = (function () { return fs.readFileSync(path.normalize(__dirname + '/favicon.ico'), { encoding: 'utf-8' }); })();
exports.publicIndex = "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\n  <title>Gorila HTTP</title>\n</head>\n\n<body>\n  <h1>Bienvenido a Gorila!</h1>\n</body>\n\n</html>\n";
exports.httpProfiles = "import { ProfileGorilaHttp } from '@gorila/http';\n\nexport const dev: ProfileGorilaHttp = {\n  pathsPublic: [\n    {\n      route: '',\n      dir: '../public'\n    }\n  ],\n  dev: {\n    showExternalIp: false,\n    logger: false,\n    interfaceNetwork: ''\n  }\n};\n";
exports.configIndex1 = "import { LoaderConfig } from '@gorila/core';\nimport { dev as GorilaHttp } from './http.profiles';\n\nexport default new LoaderConfig({\n  GorilaHttp\n});\n";
exports.httpController = "import { HTTPController, Get } from '@gorila/http';\nimport { setModel } from '@gorila/core';\nimport { WelcomeModel } from '../models/welcome.model';\n\nexport class WelcomeController extends HTTPController {\n\t@setModel(WelcomeModel) model: WelcomeModel;\n\t@Get('/welcome')\n\tpublic welcome(req, res) {\n\t\tres.status(200).send(this.model.getWelcome());\n\t}\n}\n";
exports.httpControllers = "import { HTTPControllers as controllers } from '@gorila/http';\nimport { WelcomeController } from './welcome.controller';\n\nconst controllers: controllers = [\n    WelcomeController\n];\n\nexport default controllers;\n";
exports.model = "import { setLib, Model } from '@gorila/core';\n\nexport class WelcomeModel extends Model {\n  @setLib('LibSample') private getMessage: Function;\n  public getWelcome() {\n    return this.getMessage();\n  }\n}\n";
exports.main1 = "import { Log } from '@gorila/core';\nimport { HTTPServer } from '@gorila/http';\n\n(async () => {\n  const httpServer = new HTTPServer(__dirname);\n  await httpServer.init();\n  Log(" + "`Corriendo servdor http en http://localhost:${httpServer.ports.http}`" + ");\n})();\n";
exports.package1 = "{\n  \"name\": \"gorilaproyect\",\n  \"version\": \"0.0.1\",\n  \"main\": \"./dist/main.js\",\n  \"scripts\": {\n    \"start\": \"node .\",\n    \"build\": \"gorila build\",\n    \"watch\": \"gorila watch\"\n  },\n  \"dependencies\": {\n    \"@gorila/core\": \"git+https://github.com/RodrigoCid95/GorilaCore.git\",\n    \"@gorila/http\": \"git+https://github.com/RodrigoCid95/GorilaHTTP.git\",\n    \"tslib\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.8\"\n  }\n}\n";
exports.socketsProfiles = "import { ProfileSocketsConfig } from '@gorila/sockets';\n\nexport const dev: ProfileSocketsConfig = {\n  port: 5000\n};\n";
exports.configIndex2 = "import { LoaderConfig } from '@gorila/core';\nimport { dev as GorilaSockets } from './sockets.profiles';\n\nexport default new LoaderConfig({\n  GorilaSockets\n});\n";
exports.socketsController = "import { setModel } from '@gorila/core';\nimport { SocketsController, On } from '@gorila/sockets';\nimport { WelcomeModel } from '../models/welcome.model';\n\nexport class WelcomeController extends SocketsController {\n\t@setModel(WelcomeModel) model: WelcomeModel;\n  @On('/test')\n  public test() {\n    return this.model.getWelcome();\n  }\n}\n";
exports.socketsControllers = "import { SocketsControllers } from '@gorila/sockets';\nimport { WelcomeController } from './welcome.controller';\n\nconst controllers: SocketsControllers = [\n  WelcomeController\n];\n\nexport default controllers;\n";
exports.main2 = "import { Log } from '@gorila/core';\nimport { SocketsServer } from '@gorila/sockets';\n\n(async () => {\n  const socketsServer = new SocketsServer(\n    __dirname,\n    null,\n    null,\n    null\n  );\n  await socketsServer.init();\n  Log(" + "`Corriendo en ws://localhost:${socketsServer.port}`" + ");\n})();\n";
exports.package2 = "{\n  \"name\": \"gorilaproyect\",\n  \"version\": \"0.0.1\",\n  \"main\": \"./dist/main.js\",\n  \"scripts\": {\n    \"start\": \"node .\",\n    \"build\": \"gorila build\",\n    \"watch\": \"gorila watch\"\n  },\n  \"dependencies\": {\n    \"@gorila/core\": \"git+https://github.com/RodrigoCid95/GorilaCore.git\",\n    \"@gorila/sockets\": \"git+https://github.com/RodrigoCid95/GorilaSockets.git\",\n    \"tslib\": \"^2.0.3\"\n  }\n}\n";
exports.publicIndex1 = "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <title>Gorila Server</title>\n</head>\n\n<body>\n  <h1>Bienvenido a Gorila!</h1>\n  <script>\n    const socket = io();\n    socket.on('connect', () => {\n      console.log(socket.connected, socket.id);\n      socket.emit('/test', function(data) {\n        console.log(data);\n      });\n    });\n  </script>\n</body>\n\n</html>\n";
exports.configIndex3 = "import { LoaderConfig } from '@gorila/core';\nimport { dev as GorilaHttp } from './http.profiles';\nimport { dev as GorilaSockets } from './sockets.profiles';\n\nexport default new LoaderConfig({\n  GorilaHttp,\n  GorilaSockets\n});\n";
exports.httpController3 = "import { HTTPController, Get } from '@gorila/http';\nimport { setModel } from '@gorila/core';\nimport { WelcomeModel } from '../../models/welcome.model';\n\nexport class WelcomeController extends HTTPController {\n\t@setModel(WelcomeModel) model: WelcomeModel;\n\t@Get('/welcome')\n\tpublic welcome(req, res) {\n\t\tres.status(200).send(this.model.getWelcome());\n\t}\n}\n";
exports.socketsController3 = "import { setModel } from '@gorila/core';\nimport { SocketsController, On } from '@gorila/sockets';\nimport { WelcomeModel } from './../../models/welcome.model';\n\nexport class WelcomeController extends SocketsController {\n\t@setModel(WelcomeModel) model: WelcomeModel;\n  @On('/test')\n  public test() {\n    return this.model.getWelcome();\n  }\n}\n";
exports.httpControllers3 = "import { HTTPControllers as controllers } from '@gorila/http';\nimport { WelcomeController } from './http/welcome.controller';\n\nconst controllers: controllers = [\n    WelcomeController\n];\n\nexport default controllers;\n";
exports.socketsControllers3 = "import { SocketsControllers } from '@gorila/sockets';\nimport { WelcomeController } from './sockets/welcome.controller';\n\nconst controllers: SocketsControllers = [\n  WelcomeController\n];\n\nexport default controllers;\n";
exports.main3 = "import { Log } from '@gorila/core';\nimport { HTTPServer } from '@gorila/http';\nimport { SocketsServer } from '@gorila/sockets';\n\n(async () => {\n  const httpServer = new HTTPServer(__dirname);\n  await httpServer.init();\n  Log(" + "`Corriendo servdor http en http://localhost:${httpServer.ports.http}`" + ");\n  const socketsServer = new SocketsServer(\n    __dirname,\n    httpServer.loaderConfig,\n    httpServer.httpServer,\n    httpServer.libraryManager\n  );\n  await socketsServer.init();\n  Log(" + "`Corriendo en ws://localhost:${socketsServer.port}`" + ");\n})();\n";
exports.package3 = "{\n  \"name\": \"gorilaproyect\",\n  \"version\": \"0.0.1\",\n  \"main\": \"./dist/main.js\",\n  \"scripts\": {\n    \"start\": \"node .\",\n    \"build\": \"gorila build\",\n    \"watch\": \"gorila watch\"\n  },\n  \"dependencies\": {\n    \"@gorila/core\": \"git+https://github.com/RodrigoCid95/GorilaCore.git\",\n    \"@gorila/http\": \"git+https://github.com/RodrigoCid95/GorilaHTTP.git\",\n    \"@gorila/sockets\": \"git+https://github.com/RodrigoCid95/GorilaSockets.git\",\n    \"tslib\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.8\"\n  }\n}\n";
